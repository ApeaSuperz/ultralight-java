name: CI
on: [push]

jobs:
  build-binaries-unix:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]

    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Make gradlew executable
        run: "chmod +x gradlew"
      - name: Build native with gradle
        run: "./gradlew -PCI=true ultralight-java-native:build"
      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir artifacts
          for file in $(cat ci/binaries); do # File generated by gradle
            echo "Found binary artifact ${file}"
            cp "${file}" artifacts
          done
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: native-binaries
          path: artifacts

  build-binaries-windows:
    name: windows-latest build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build native with gradle (Windows)
        run: gradlew -PCI=true ultralight-java-native:build
        shell: cmd
      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir artifacts
          for file in $(cat ci/binaries); do # File generated by gradle
            echo "Found binary artifact ${file}"
            cp "${file}" artifacts
          done
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: native-binaries-ultralight
          path: native-binaries/ultralight

  build-jars:
    needs: [build-binaries-unix, build-binaries-windows]
    runs-on: ubuntu-latest # Doesn't matter, but linux tends to be the fastest

    name: Build final jars

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Download existing artifacts
        uses: actions/download-artifact@v1
        with:
          name: native-binaries-ultralight
          path: native-binaries/ultralight
      - name: Make gradlew executable
        run: "chmod +x gradlew"
      - name: Build base with gradle
        run: "./gradlew -PCI=true -Pultralight-java.base.native-binaries-folder=native-binaries/ultralight ultralight-java-base:build"
      - name: Build lwjgl3-opengl example with gradle
        run: "./gradlew -PCI=true -Pultralight-java.base.native-binaries-folder=native-binaries/ultralight example:lwjgl3-opengl:build"
      - name: Check license
        run: "./gradlew licenseCheck"
      - name: Deploy to OSSHR
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: "./gradlew -PCI=true -PenableSigning -Pultralight-java.base.native-binaries-folder=native-binaries/ultralight publish"
        env:
          SIGNING_KEY: ${{ secrets.signingKey }}
          SIGNING_PASSWORD: ${{ secrets.signingPassword }}
          OSSHR_USER: ${{ secrets.osshrUser }}
          OSSHR_PASSWORD: ${{ secrets.osshrPassword }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Final artifacts
          path: ultralight-java-*/build/libs/*.jar
