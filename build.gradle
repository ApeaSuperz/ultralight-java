buildscript {
    if(System.getenv("artifactory_deploy") || project.hasProperty("artifactory_deploy")) {
        apply from: file("deploy-settings.gradle"), to: it
    }
}

plugins {
    id 'maven-publish'
    id "net.minecrell.licenser" version "0.4.1" apply false
}

group 'net.labymedia'
version '0.2.2'

apply from: 'ci.gradle'

ext.commonPublish = { Project currentProject, Closure config ->
    currentProject.publishing {
        publications {
            mavenJava(MavenPublication) {
                from currentProject.components.java

                configure(it, config)

                version = rootProject.version

                pom {
                    url = "https://github.com/LabyMod/ultralight-java"

                    licenses {
                        license {
                            name = "GPLv3"
                        }
                    }

                    developers {
                        developer {
                            id = "LabyMedia"
                            email = "contact@labymod.net"
                        }
                    }

                    scm {
                        connection = "scm:git:git://github.com/LabyMod/ultralight-java.git"
                        developerConnection = "scm:git:ssh://github.com/LabyMod/ultralight-java.git"
                        url = "https://github.com/LabyMod/ultralight-java"
                    }
                }
            }
        }
    }
}

if(System.getenv("artifactory_deploy") || project.hasProperty("artifactory_deploy")) {
    apply from: file("deploy.gradle")
}

subprojects {
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    pluginManager.withPlugin("java") {
        apply plugin: "net.minecrell.licenser"

        license {
            header = rootProject.file("LICENSE_HEADER")

            ext {
                author = "LabyMedia"
                year = Calendar.getInstance(TimeZone.getTimeZone("UTC")).get(Calendar.YEAR)
            }
        }

        java {
            withSourcesJar()
            withJavadocJar()
        }
    }
}
